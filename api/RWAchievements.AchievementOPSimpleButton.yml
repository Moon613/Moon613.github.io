### YamlMime:ManagedReference
items:
- uid: RWAchievements.AchievementOPSimpleButton
  commentId: T:RWAchievements.AchievementOPSimpleButton
  id: AchievementOPSimpleButton
  parent: RWAchievements
  children:
  - RWAchievements.AchievementOPSimpleButton.#ctor(UnityEngine.Vector2,UnityEngine.Vector2,System.String,System.String)
  - RWAchievements.AchievementOPSimpleButton.ID
  langs:
  - csharp
  - vb
  name: AchievementOPSimpleButton
  nameWithType: AchievementOPSimpleButton
  fullName: RWAchievements.AchievementOPSimpleButton
  type: Class
  source:
    remote:
      path: AchievementMenu.cs
      branch: main
      repo: https://github.com/Moon613/RWAchievement.git
    id: AchievementOPSimpleButton
    path: AchievementMenu.cs
    startLine: 302
  assemblies:
  - RWAchievement
  namespace: RWAchievements
  syntax:
    content: 'public class AchievementOPSimpleButton : OpSimpleButton'
    content.vb: Public Class AchievementOPSimpleButton Inherits OpSimpleButton
  inheritance:
  - System.Object
  - Menu.Remix.MixedUI.UIelement
  - Menu.Remix.MixedUI.UIfocusable
  - Menu.Remix.MixedUI.OpSimpleButton
  inheritedMembers:
  - Menu.Remix.MixedUI.OpSimpleButton._heldCounter
  - Menu.Remix.MixedUI.OpSimpleButton.soundClick
  - Menu.Remix.MixedUI.OpSimpleButton._alignment
  - Menu.Remix.MixedUI.OpSimpleButton._text
  - Menu.Remix.MixedUI.OpSimpleButton.colorEdge
  - Menu.Remix.MixedUI.OpSimpleButton.colorFill
  - Menu.Remix.MixedUI.OpSimpleButton._label
  - Menu.Remix.MixedUI.OpSimpleButton._rect
  - Menu.Remix.MixedUI.OpSimpleButton._rectH
  - Menu.Remix.MixedUI.OpSimpleButton.DisplayDescription
  - Menu.Remix.MixedUI.OpSimpleButton.Change
  - Menu.Remix.MixedUI.OpSimpleButton.GrafUpdate(System.Single)
  - Menu.Remix.MixedUI.OpSimpleButton.NonMouseSetHeld(System.Boolean)
  - Menu.Remix.MixedUI.OpSimpleButton.Update
  - Menu.Remix.MixedUI.OpSimpleButton.alignment
  - Menu.Remix.MixedUI.OpSimpleButton.text
  - Menu.Remix.MixedUI.OpSimpleButton._IsImageButton
  - Menu.Remix.MixedUI.OpSimpleButton.OnClick
  - Menu.Remix.MixedUI.OpSimpleButton.OnPressInit
  - Menu.Remix.MixedUI.OpSimpleButton.OnPressHold
  - Menu.Remix.MixedUI.UIfocusable.<bumpBehav>k__BackingField
  - Menu.Remix.MixedUI.UIfocusable.greyedOut
  - Menu.Remix.MixedUI.UIfocusable._lastGreyedOut
  - Menu.Remix.MixedUI.UIfocusable.sign
  - Menu.Remix.MixedUI.UIfocusable.<NextFocusable>k__BackingField
  - Menu.Remix.MixedUI.UIfocusable.mouseOverStopsScrollwheel
  - Menu.Remix.MixedUI.UIfocusable._held
  - Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusGet
  - Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusLose
  - Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(Menu.Remix.MixedUI.UIfocusable.NextDirection,Menu.Remix.MixedUI.UIfocusable)
  - Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(Menu.Remix.MixedUI.UIfocusable[])
  - Menu.Remix.MixedUI.UIfocusable.MutualHorizontalFocusableBind(Menu.Remix.MixedUI.UIfocusable,Menu.Remix.MixedUI.UIfocusable)
  - Menu.Remix.MixedUI.UIfocusable.MutualVerticalFocusableBind(Menu.Remix.MixedUI.UIfocusable,Menu.Remix.MixedUI.UIfocusable)
  - Menu.Remix.MixedUI.UIfocusable.Deactivate
  - Menu.Remix.MixedUI.UIfocusable.FocusMoveDisallow(Menu.Remix.MixedUI.UIfocusable)
  - Menu.Remix.MixedUI.UIfocusable.Freeze
  - Menu.Remix.MixedUI.UIfocusable.bumpBehav
  - Menu.Remix.MixedUI.UIfocusable.NextFocusable
  - Menu.Remix.MixedUI.UIfocusable.CurrentlyFocusableMouse
  - Menu.Remix.MixedUI.UIfocusable.CurrentlyFocusableNonMouse
  - Menu.Remix.MixedUI.UIfocusable.FocusRect
  - Menu.Remix.MixedUI.UIfocusable.Focused
  - Menu.Remix.MixedUI.UIfocusable.held
  - Menu.Remix.MixedUI.UIfocusable.OnHeld
  - Menu.Remix.MixedUI.UIfocusable.OnFocusGet
  - Menu.Remix.MixedUI.UIfocusable.OnFocusLose
  - Menu.Remix.MixedUI.UIelement.mute
  - Menu.Remix.MixedUI.UIelement.description
  - Menu.Remix.MixedUI.UIelement.isRectangular
  - Menu.Remix.MixedUI.UIelement.<Hidden>k__BackingField
  - Menu.Remix.MixedUI.UIelement._pos
  - Menu.Remix.MixedUI.UIelement._size
  - Menu.Remix.MixedUI.UIelement._rad
  - Menu.Remix.MixedUI.UIelement.fixedSize
  - Menu.Remix.MixedUI.UIelement.fixedRad
  - Menu.Remix.MixedUI.UIelement.tab
  - Menu.Remix.MixedUI.UIelement.myContainer
  - Menu.Remix.MixedUI.UIelement.<scrollBox>k__BackingField
  - Menu.Remix.MixedUI.UIelement.<InScrollBox>k__BackingField
  - Menu.Remix.MixedUI.UIelement.lastScreenPos
  - Menu.Remix.MixedUI.UIelement.wrapper
  - Menu.Remix.MixedUI.UIelement.Reset
  - Menu.Remix.MixedUI.UIelement.Hide
  - Menu.Remix.MixedUI.UIelement.Show
  - Menu.Remix.MixedUI.UIelement.GetPos
  - Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)
  - Menu.Remix.MixedUI.UIelement.MoveToBack
  - Menu.Remix.MixedUI.UIelement.MoveToFront
  - Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)
  - Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)
  - Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)
  - Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)
  - Menu.Remix.MixedUI.UIelement.Unload
  - Menu.Remix.MixedUI.UIelement.FrameMultiply(System.Int32)
  - Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)
  - Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)
  - Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)
  - Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(System.Nullable{System.Boolean})
  - Menu.Remix.MixedUI.UIelement.Reactivate
  - Menu.Remix.MixedUI.UIelement._AddToScrollBox(Menu.Remix.MixedUI.OpScrollBox)
  - Menu.Remix.MixedUI.UIelement._RemoveFromScrollBox
  - Menu.Remix.MixedUI.UIelement._SetTab(Menu.Remix.MixedUI.OpTab)
  - Menu.Remix.MixedUI.UIelement._CenterPos
  - Menu.Remix.MixedUI.UIelement.PosX
  - Menu.Remix.MixedUI.UIelement.PosY
  - Menu.Remix.MixedUI.UIelement.size
  - Menu.Remix.MixedUI.UIelement.rad
  - Menu.Remix.MixedUI.UIelement.Hidden
  - Menu.Remix.MixedUI.UIelement.IsInactive
  - Menu.Remix.MixedUI.UIelement.pos
  - Menu.Remix.MixedUI.UIelement.Menu
  - Menu.Remix.MixedUI.UIelement.Owner
  - Menu.Remix.MixedUI.UIelement.MouseOver
  - Menu.Remix.MixedUI.UIelement.MousePos
  - Menu.Remix.MixedUI.UIelement.scrollBox
  - Menu.Remix.MixedUI.UIelement.InScrollBox
  - Menu.Remix.MixedUI.UIelement.ScreenPos
  - Menu.Remix.MixedUI.UIelement.frameMulti
  - Menu.Remix.MixedUI.UIelement.MenuMouseMode
  - Menu.Remix.MixedUI.UIelement.CtlrInput
  - Menu.Remix.MixedUI.UIelement.LastCtlrInput
  - Menu.Remix.MixedUI.UIelement.ContextWrapped
  - Menu.Remix.MixedUI.UIelement.OnChange
  - Menu.Remix.MixedUI.UIelement.OnUpdate
  - Menu.Remix.MixedUI.UIelement.OnGrafUpdate
  - Menu.Remix.MixedUI.UIelement.OnReset
  - Menu.Remix.MixedUI.UIelement.OnDeactivate
  - Menu.Remix.MixedUI.UIelement.OnReactivate
  - Menu.Remix.MixedUI.UIelement.OnUnload
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: RWAchievements.AchievementOPSimpleButton.ID
  commentId: F:RWAchievements.AchievementOPSimpleButton.ID
  id: ID
  parent: RWAchievements.AchievementOPSimpleButton
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: AchievementOPSimpleButton.ID
  fullName: RWAchievements.AchievementOPSimpleButton.ID
  type: Field
  source:
    remote:
      path: AchievementMenu.cs
      branch: main
      repo: https://github.com/Moon613/RWAchievement.git
    id: ID
    path: AchievementMenu.cs
    startLine: 304
  assemblies:
  - RWAchievement
  namespace: RWAchievements
  syntax:
    content: public string ID
    return:
      type: System.String
    content.vb: Public ID As String
- uid: RWAchievements.AchievementOPSimpleButton.#ctor(UnityEngine.Vector2,UnityEngine.Vector2,System.String,System.String)
  commentId: M:RWAchievements.AchievementOPSimpleButton.#ctor(UnityEngine.Vector2,UnityEngine.Vector2,System.String,System.String)
  id: '#ctor(UnityEngine.Vector2,UnityEngine.Vector2,System.String,System.String)'
  parent: RWAchievements.AchievementOPSimpleButton
  langs:
  - csharp
  - vb
  name: AchievementOPSimpleButton(Vector2, Vector2, string, string)
  nameWithType: AchievementOPSimpleButton.AchievementOPSimpleButton(Vector2, Vector2, string, string)
  fullName: RWAchievements.AchievementOPSimpleButton.AchievementOPSimpleButton(UnityEngine.Vector2, UnityEngine.Vector2, string, string)
  type: Constructor
  source:
    remote:
      path: AchievementMenu.cs
      branch: main
      repo: https://github.com/Moon613/RWAchievement.git
    id: .ctor
    path: AchievementMenu.cs
    startLine: 305
  assemblies:
  - RWAchievement
  namespace: RWAchievements
  syntax:
    content: public AchievementOPSimpleButton(Vector2 pos, Vector2 size, string displayText, string ID)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
    - id: size
      type: UnityEngine.Vector2
    - id: displayText
      type: System.String
    - id: ID
      type: System.String
    content.vb: Public Sub New(pos As Vector2, size As Vector2, displayText As String, ID As String)
  overload: RWAchievements.AchievementOPSimpleButton.#ctor*
  nameWithType.vb: AchievementOPSimpleButton.New(Vector2, Vector2, String, String)
  fullName.vb: RWAchievements.AchievementOPSimpleButton.New(UnityEngine.Vector2, UnityEngine.Vector2, String, String)
  name.vb: New(Vector2, Vector2, String, String)
references:
- uid: RWAchievements
  commentId: N:RWAchievements
  href: RWAchievements.html
  name: RWAchievements
  nameWithType: RWAchievements
  fullName: RWAchievements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Menu.Remix.MixedUI.UIelement
  commentId: T:Menu.Remix.MixedUI.UIelement
  parent: Menu.Remix.MixedUI
  isExternal: true
  name: UIelement
  nameWithType: UIelement
  fullName: Menu.Remix.MixedUI.UIelement
- uid: Menu.Remix.MixedUI.UIfocusable
  commentId: T:Menu.Remix.MixedUI.UIfocusable
  parent: Menu.Remix.MixedUI
  isExternal: true
  name: UIfocusable
  nameWithType: UIfocusable
  fullName: Menu.Remix.MixedUI.UIfocusable
- uid: Menu.Remix.MixedUI.OpSimpleButton
  commentId: T:Menu.Remix.MixedUI.OpSimpleButton
  parent: Menu.Remix.MixedUI
  isExternal: true
  name: OpSimpleButton
  nameWithType: OpSimpleButton
  fullName: Menu.Remix.MixedUI.OpSimpleButton
- uid: Menu.Remix.MixedUI.OpSimpleButton._heldCounter
  commentId: F:Menu.Remix.MixedUI.OpSimpleButton._heldCounter
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: _heldCounter
  nameWithType: OpSimpleButton._heldCounter
  fullName: Menu.Remix.MixedUI.OpSimpleButton._heldCounter
- uid: Menu.Remix.MixedUI.OpSimpleButton.soundClick
  commentId: F:Menu.Remix.MixedUI.OpSimpleButton.soundClick
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: soundClick
  nameWithType: OpSimpleButton.soundClick
  fullName: Menu.Remix.MixedUI.OpSimpleButton.soundClick
- uid: Menu.Remix.MixedUI.OpSimpleButton._alignment
  commentId: F:Menu.Remix.MixedUI.OpSimpleButton._alignment
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: _alignment
  nameWithType: OpSimpleButton._alignment
  fullName: Menu.Remix.MixedUI.OpSimpleButton._alignment
- uid: Menu.Remix.MixedUI.OpSimpleButton._text
  commentId: F:Menu.Remix.MixedUI.OpSimpleButton._text
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: _text
  nameWithType: OpSimpleButton._text
  fullName: Menu.Remix.MixedUI.OpSimpleButton._text
- uid: Menu.Remix.MixedUI.OpSimpleButton.colorEdge
  commentId: F:Menu.Remix.MixedUI.OpSimpleButton.colorEdge
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: colorEdge
  nameWithType: OpSimpleButton.colorEdge
  fullName: Menu.Remix.MixedUI.OpSimpleButton.colorEdge
- uid: Menu.Remix.MixedUI.OpSimpleButton.colorFill
  commentId: F:Menu.Remix.MixedUI.OpSimpleButton.colorFill
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: colorFill
  nameWithType: OpSimpleButton.colorFill
  fullName: Menu.Remix.MixedUI.OpSimpleButton.colorFill
- uid: Menu.Remix.MixedUI.OpSimpleButton._label
  commentId: F:Menu.Remix.MixedUI.OpSimpleButton._label
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: _label
  nameWithType: OpSimpleButton._label
  fullName: Menu.Remix.MixedUI.OpSimpleButton._label
- uid: Menu.Remix.MixedUI.OpSimpleButton._rect
  commentId: F:Menu.Remix.MixedUI.OpSimpleButton._rect
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: _rect
  nameWithType: OpSimpleButton._rect
  fullName: Menu.Remix.MixedUI.OpSimpleButton._rect
- uid: Menu.Remix.MixedUI.OpSimpleButton._rectH
  commentId: F:Menu.Remix.MixedUI.OpSimpleButton._rectH
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: _rectH
  nameWithType: OpSimpleButton._rectH
  fullName: Menu.Remix.MixedUI.OpSimpleButton._rectH
- uid: Menu.Remix.MixedUI.OpSimpleButton.DisplayDescription
  commentId: M:Menu.Remix.MixedUI.OpSimpleButton.DisplayDescription
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: DisplayDescription()
  nameWithType: OpSimpleButton.DisplayDescription()
  fullName: Menu.Remix.MixedUI.OpSimpleButton.DisplayDescription()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.OpSimpleButton.DisplayDescription
    name: DisplayDescription
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.OpSimpleButton.DisplayDescription
    name: DisplayDescription
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.OpSimpleButton.Change
  commentId: M:Menu.Remix.MixedUI.OpSimpleButton.Change
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: Change()
  nameWithType: OpSimpleButton.Change()
  fullName: Menu.Remix.MixedUI.OpSimpleButton.Change()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.OpSimpleButton.Change
    name: Change
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.OpSimpleButton.Change
    name: Change
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.OpSimpleButton.GrafUpdate(System.Single)
  commentId: M:Menu.Remix.MixedUI.OpSimpleButton.GrafUpdate(System.Single)
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: GrafUpdate(float)
  nameWithType: OpSimpleButton.GrafUpdate(float)
  fullName: Menu.Remix.MixedUI.OpSimpleButton.GrafUpdate(float)
  nameWithType.vb: OpSimpleButton.GrafUpdate(Single)
  fullName.vb: Menu.Remix.MixedUI.OpSimpleButton.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.OpSimpleButton.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.OpSimpleButton.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.Remix.MixedUI.OpSimpleButton.NonMouseSetHeld(System.Boolean)
  commentId: M:Menu.Remix.MixedUI.OpSimpleButton.NonMouseSetHeld(System.Boolean)
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: NonMouseSetHeld(bool)
  nameWithType: OpSimpleButton.NonMouseSetHeld(bool)
  fullName: Menu.Remix.MixedUI.OpSimpleButton.NonMouseSetHeld(bool)
  nameWithType.vb: OpSimpleButton.NonMouseSetHeld(Boolean)
  fullName.vb: Menu.Remix.MixedUI.OpSimpleButton.NonMouseSetHeld(Boolean)
  name.vb: NonMouseSetHeld(Boolean)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.OpSimpleButton.NonMouseSetHeld(System.Boolean)
    name: NonMouseSetHeld
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.OpSimpleButton.NonMouseSetHeld(System.Boolean)
    name: NonMouseSetHeld
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Menu.Remix.MixedUI.OpSimpleButton.Update
  commentId: M:Menu.Remix.MixedUI.OpSimpleButton.Update
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: Update()
  nameWithType: OpSimpleButton.Update()
  fullName: Menu.Remix.MixedUI.OpSimpleButton.Update()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.OpSimpleButton.Update
    name: Update
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.OpSimpleButton.Update
    name: Update
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.OpSimpleButton.alignment
  commentId: P:Menu.Remix.MixedUI.OpSimpleButton.alignment
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: alignment
  nameWithType: OpSimpleButton.alignment
  fullName: Menu.Remix.MixedUI.OpSimpleButton.alignment
- uid: Menu.Remix.MixedUI.OpSimpleButton.text
  commentId: P:Menu.Remix.MixedUI.OpSimpleButton.text
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: text
  nameWithType: OpSimpleButton.text
  fullName: Menu.Remix.MixedUI.OpSimpleButton.text
- uid: Menu.Remix.MixedUI.OpSimpleButton._IsImageButton
  commentId: P:Menu.Remix.MixedUI.OpSimpleButton._IsImageButton
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: _IsImageButton
  nameWithType: OpSimpleButton._IsImageButton
  fullName: Menu.Remix.MixedUI.OpSimpleButton._IsImageButton
- uid: Menu.Remix.MixedUI.OpSimpleButton.OnClick
  commentId: E:Menu.Remix.MixedUI.OpSimpleButton.OnClick
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: OnClick
  nameWithType: OpSimpleButton.OnClick
  fullName: Menu.Remix.MixedUI.OpSimpleButton.OnClick
- uid: Menu.Remix.MixedUI.OpSimpleButton.OnPressInit
  commentId: E:Menu.Remix.MixedUI.OpSimpleButton.OnPressInit
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: OnPressInit
  nameWithType: OpSimpleButton.OnPressInit
  fullName: Menu.Remix.MixedUI.OpSimpleButton.OnPressInit
- uid: Menu.Remix.MixedUI.OpSimpleButton.OnPressHold
  commentId: E:Menu.Remix.MixedUI.OpSimpleButton.OnPressHold
  parent: Menu.Remix.MixedUI.OpSimpleButton
  isExternal: true
  name: OnPressHold
  nameWithType: OpSimpleButton.OnPressHold
  fullName: Menu.Remix.MixedUI.OpSimpleButton.OnPressHold
- uid: Menu.Remix.MixedUI.UIfocusable.<bumpBehav>k__BackingField
  commentId: F:Menu.Remix.MixedUI.UIfocusable.<bumpBehav>k__BackingField
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: <bumpBehav>k__BackingField
  nameWithType: UIfocusable.<bumpBehav>k__BackingField
  fullName: Menu.Remix.MixedUI.UIfocusable.<bumpBehav>k__BackingField
- uid: Menu.Remix.MixedUI.UIfocusable.greyedOut
  commentId: F:Menu.Remix.MixedUI.UIfocusable.greyedOut
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: greyedOut
  nameWithType: UIfocusable.greyedOut
  fullName: Menu.Remix.MixedUI.UIfocusable.greyedOut
- uid: Menu.Remix.MixedUI.UIfocusable._lastGreyedOut
  commentId: F:Menu.Remix.MixedUI.UIfocusable._lastGreyedOut
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: _lastGreyedOut
  nameWithType: UIfocusable._lastGreyedOut
  fullName: Menu.Remix.MixedUI.UIfocusable._lastGreyedOut
- uid: Menu.Remix.MixedUI.UIfocusable.sign
  commentId: F:Menu.Remix.MixedUI.UIfocusable.sign
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: sign
  nameWithType: UIfocusable.sign
  fullName: Menu.Remix.MixedUI.UIfocusable.sign
- uid: Menu.Remix.MixedUI.UIfocusable.<NextFocusable>k__BackingField
  commentId: F:Menu.Remix.MixedUI.UIfocusable.<NextFocusable>k__BackingField
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: <NextFocusable>k__BackingField
  nameWithType: UIfocusable.<NextFocusable>k__BackingField
  fullName: Menu.Remix.MixedUI.UIfocusable.<NextFocusable>k__BackingField
- uid: Menu.Remix.MixedUI.UIfocusable.mouseOverStopsScrollwheel
  commentId: F:Menu.Remix.MixedUI.UIfocusable.mouseOverStopsScrollwheel
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: mouseOverStopsScrollwheel
  nameWithType: UIfocusable.mouseOverStopsScrollwheel
  fullName: Menu.Remix.MixedUI.UIfocusable.mouseOverStopsScrollwheel
- uid: Menu.Remix.MixedUI.UIfocusable._held
  commentId: F:Menu.Remix.MixedUI.UIfocusable._held
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: _held
  nameWithType: UIfocusable._held
  fullName: Menu.Remix.MixedUI.UIfocusable._held
- uid: Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusGet
  commentId: M:Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusGet
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: _InvokeOnFocusGet()
  nameWithType: UIfocusable._InvokeOnFocusGet()
  fullName: Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusGet()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusGet
    name: _InvokeOnFocusGet
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusGet
    name: _InvokeOnFocusGet
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusLose
  commentId: M:Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusLose
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: _InvokeOnFocusLose()
  nameWithType: UIfocusable._InvokeOnFocusLose()
  fullName: Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusLose()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusLose
    name: _InvokeOnFocusLose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIfocusable._InvokeOnFocusLose
    name: _InvokeOnFocusLose
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(Menu.Remix.MixedUI.UIfocusable.NextDirection,Menu.Remix.MixedUI.UIfocusable)
  commentId: M:Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(Menu.Remix.MixedUI.UIfocusable.NextDirection,Menu.Remix.MixedUI.UIfocusable)
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: SetNextFocusable(NextDirection, UIfocusable)
  nameWithType: UIfocusable.SetNextFocusable(UIfocusable.NextDirection, UIfocusable)
  fullName: Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(Menu.Remix.MixedUI.UIfocusable.NextDirection, Menu.Remix.MixedUI.UIfocusable)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(Menu.Remix.MixedUI.UIfocusable.NextDirection,Menu.Remix.MixedUI.UIfocusable)
    name: SetNextFocusable
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIfocusable.NextDirection
    name: NextDirection
    isExternal: true
  - name: ','
  - name: " "
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(Menu.Remix.MixedUI.UIfocusable.NextDirection,Menu.Remix.MixedUI.UIfocusable)
    name: SetNextFocusable
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIfocusable.NextDirection
    name: NextDirection
    isExternal: true
  - name: ','
  - name: " "
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: )
- uid: Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(Menu.Remix.MixedUI.UIfocusable[])
  commentId: M:Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(Menu.Remix.MixedUI.UIfocusable[])
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: SetNextFocusable(params UIfocusable[])
  nameWithType: UIfocusable.SetNextFocusable(params UIfocusable[])
  fullName: Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(params Menu.Remix.MixedUI.UIfocusable[])
  nameWithType.vb: UIfocusable.SetNextFocusable(ParamArray UIfocusable())
  fullName.vb: Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(ParamArray Menu.Remix.MixedUI.UIfocusable())
  name.vb: SetNextFocusable(ParamArray UIfocusable())
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(Menu.Remix.MixedUI.UIfocusable[])
    name: SetNextFocusable
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIfocusable.SetNextFocusable(Menu.Remix.MixedUI.UIfocusable[])
    name: SetNextFocusable
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Menu.Remix.MixedUI.UIfocusable.MutualHorizontalFocusableBind(Menu.Remix.MixedUI.UIfocusable,Menu.Remix.MixedUI.UIfocusable)
  commentId: M:Menu.Remix.MixedUI.UIfocusable.MutualHorizontalFocusableBind(Menu.Remix.MixedUI.UIfocusable,Menu.Remix.MixedUI.UIfocusable)
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: MutualHorizontalFocusableBind(UIfocusable, UIfocusable)
  nameWithType: UIfocusable.MutualHorizontalFocusableBind(UIfocusable, UIfocusable)
  fullName: Menu.Remix.MixedUI.UIfocusable.MutualHorizontalFocusableBind(Menu.Remix.MixedUI.UIfocusable, Menu.Remix.MixedUI.UIfocusable)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIfocusable.MutualHorizontalFocusableBind(Menu.Remix.MixedUI.UIfocusable,Menu.Remix.MixedUI.UIfocusable)
    name: MutualHorizontalFocusableBind
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: ','
  - name: " "
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIfocusable.MutualHorizontalFocusableBind(Menu.Remix.MixedUI.UIfocusable,Menu.Remix.MixedUI.UIfocusable)
    name: MutualHorizontalFocusableBind
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: ','
  - name: " "
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: )
- uid: Menu.Remix.MixedUI.UIfocusable.MutualVerticalFocusableBind(Menu.Remix.MixedUI.UIfocusable,Menu.Remix.MixedUI.UIfocusable)
  commentId: M:Menu.Remix.MixedUI.UIfocusable.MutualVerticalFocusableBind(Menu.Remix.MixedUI.UIfocusable,Menu.Remix.MixedUI.UIfocusable)
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: MutualVerticalFocusableBind(UIfocusable, UIfocusable)
  nameWithType: UIfocusable.MutualVerticalFocusableBind(UIfocusable, UIfocusable)
  fullName: Menu.Remix.MixedUI.UIfocusable.MutualVerticalFocusableBind(Menu.Remix.MixedUI.UIfocusable, Menu.Remix.MixedUI.UIfocusable)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIfocusable.MutualVerticalFocusableBind(Menu.Remix.MixedUI.UIfocusable,Menu.Remix.MixedUI.UIfocusable)
    name: MutualVerticalFocusableBind
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: ','
  - name: " "
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIfocusable.MutualVerticalFocusableBind(Menu.Remix.MixedUI.UIfocusable,Menu.Remix.MixedUI.UIfocusable)
    name: MutualVerticalFocusableBind
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: ','
  - name: " "
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: )
- uid: Menu.Remix.MixedUI.UIfocusable.Deactivate
  commentId: M:Menu.Remix.MixedUI.UIfocusable.Deactivate
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: Deactivate()
  nameWithType: UIfocusable.Deactivate()
  fullName: Menu.Remix.MixedUI.UIfocusable.Deactivate()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIfocusable.Deactivate
    name: Deactivate
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIfocusable.Deactivate
    name: Deactivate
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIfocusable.FocusMoveDisallow(Menu.Remix.MixedUI.UIfocusable)
  commentId: M:Menu.Remix.MixedUI.UIfocusable.FocusMoveDisallow(Menu.Remix.MixedUI.UIfocusable)
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: FocusMoveDisallow(UIfocusable)
  nameWithType: UIfocusable.FocusMoveDisallow(UIfocusable)
  fullName: Menu.Remix.MixedUI.UIfocusable.FocusMoveDisallow(Menu.Remix.MixedUI.UIfocusable)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIfocusable.FocusMoveDisallow(Menu.Remix.MixedUI.UIfocusable)
    name: FocusMoveDisallow
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIfocusable.FocusMoveDisallow(Menu.Remix.MixedUI.UIfocusable)
    name: FocusMoveDisallow
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
  - name: )
- uid: Menu.Remix.MixedUI.UIfocusable.Freeze
  commentId: M:Menu.Remix.MixedUI.UIfocusable.Freeze
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: Freeze()
  nameWithType: UIfocusable.Freeze()
  fullName: Menu.Remix.MixedUI.UIfocusable.Freeze()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIfocusable.Freeze
    name: Freeze
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIfocusable.Freeze
    name: Freeze
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIfocusable.bumpBehav
  commentId: P:Menu.Remix.MixedUI.UIfocusable.bumpBehav
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: bumpBehav
  nameWithType: UIfocusable.bumpBehav
  fullName: Menu.Remix.MixedUI.UIfocusable.bumpBehav
- uid: Menu.Remix.MixedUI.UIfocusable.NextFocusable
  commentId: P:Menu.Remix.MixedUI.UIfocusable.NextFocusable
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: NextFocusable
  nameWithType: UIfocusable.NextFocusable
  fullName: Menu.Remix.MixedUI.UIfocusable.NextFocusable
- uid: Menu.Remix.MixedUI.UIfocusable.CurrentlyFocusableMouse
  commentId: P:Menu.Remix.MixedUI.UIfocusable.CurrentlyFocusableMouse
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: CurrentlyFocusableMouse
  nameWithType: UIfocusable.CurrentlyFocusableMouse
  fullName: Menu.Remix.MixedUI.UIfocusable.CurrentlyFocusableMouse
- uid: Menu.Remix.MixedUI.UIfocusable.CurrentlyFocusableNonMouse
  commentId: P:Menu.Remix.MixedUI.UIfocusable.CurrentlyFocusableNonMouse
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: CurrentlyFocusableNonMouse
  nameWithType: UIfocusable.CurrentlyFocusableNonMouse
  fullName: Menu.Remix.MixedUI.UIfocusable.CurrentlyFocusableNonMouse
- uid: Menu.Remix.MixedUI.UIfocusable.FocusRect
  commentId: P:Menu.Remix.MixedUI.UIfocusable.FocusRect
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: FocusRect
  nameWithType: UIfocusable.FocusRect
  fullName: Menu.Remix.MixedUI.UIfocusable.FocusRect
- uid: Menu.Remix.MixedUI.UIfocusable.Focused
  commentId: P:Menu.Remix.MixedUI.UIfocusable.Focused
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: Focused
  nameWithType: UIfocusable.Focused
  fullName: Menu.Remix.MixedUI.UIfocusable.Focused
- uid: Menu.Remix.MixedUI.UIfocusable.held
  commentId: P:Menu.Remix.MixedUI.UIfocusable.held
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: held
  nameWithType: UIfocusable.held
  fullName: Menu.Remix.MixedUI.UIfocusable.held
- uid: Menu.Remix.MixedUI.UIfocusable.OnHeld
  commentId: E:Menu.Remix.MixedUI.UIfocusable.OnHeld
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: OnHeld
  nameWithType: UIfocusable.OnHeld
  fullName: Menu.Remix.MixedUI.UIfocusable.OnHeld
- uid: Menu.Remix.MixedUI.UIfocusable.OnFocusGet
  commentId: E:Menu.Remix.MixedUI.UIfocusable.OnFocusGet
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: OnFocusGet
  nameWithType: UIfocusable.OnFocusGet
  fullName: Menu.Remix.MixedUI.UIfocusable.OnFocusGet
- uid: Menu.Remix.MixedUI.UIfocusable.OnFocusLose
  commentId: E:Menu.Remix.MixedUI.UIfocusable.OnFocusLose
  parent: Menu.Remix.MixedUI.UIfocusable
  isExternal: true
  name: OnFocusLose
  nameWithType: UIfocusable.OnFocusLose
  fullName: Menu.Remix.MixedUI.UIfocusable.OnFocusLose
- uid: Menu.Remix.MixedUI.UIelement.mute
  commentId: F:Menu.Remix.MixedUI.UIelement.mute
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: mute
  nameWithType: UIelement.mute
  fullName: Menu.Remix.MixedUI.UIelement.mute
- uid: Menu.Remix.MixedUI.UIelement.description
  commentId: F:Menu.Remix.MixedUI.UIelement.description
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: description
  nameWithType: UIelement.description
  fullName: Menu.Remix.MixedUI.UIelement.description
- uid: Menu.Remix.MixedUI.UIelement.isRectangular
  commentId: F:Menu.Remix.MixedUI.UIelement.isRectangular
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: isRectangular
  nameWithType: UIelement.isRectangular
  fullName: Menu.Remix.MixedUI.UIelement.isRectangular
- uid: Menu.Remix.MixedUI.UIelement.<Hidden>k__BackingField
  commentId: F:Menu.Remix.MixedUI.UIelement.<Hidden>k__BackingField
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: <Hidden>k__BackingField
  nameWithType: UIelement.<Hidden>k__BackingField
  fullName: Menu.Remix.MixedUI.UIelement.<Hidden>k__BackingField
- uid: Menu.Remix.MixedUI.UIelement._pos
  commentId: F:Menu.Remix.MixedUI.UIelement._pos
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: _pos
  nameWithType: UIelement._pos
  fullName: Menu.Remix.MixedUI.UIelement._pos
- uid: Menu.Remix.MixedUI.UIelement._size
  commentId: F:Menu.Remix.MixedUI.UIelement._size
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: _size
  nameWithType: UIelement._size
  fullName: Menu.Remix.MixedUI.UIelement._size
- uid: Menu.Remix.MixedUI.UIelement._rad
  commentId: F:Menu.Remix.MixedUI.UIelement._rad
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: _rad
  nameWithType: UIelement._rad
  fullName: Menu.Remix.MixedUI.UIelement._rad
- uid: Menu.Remix.MixedUI.UIelement.fixedSize
  commentId: F:Menu.Remix.MixedUI.UIelement.fixedSize
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: fixedSize
  nameWithType: UIelement.fixedSize
  fullName: Menu.Remix.MixedUI.UIelement.fixedSize
- uid: Menu.Remix.MixedUI.UIelement.fixedRad
  commentId: F:Menu.Remix.MixedUI.UIelement.fixedRad
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: fixedRad
  nameWithType: UIelement.fixedRad
  fullName: Menu.Remix.MixedUI.UIelement.fixedRad
- uid: Menu.Remix.MixedUI.UIelement.tab
  commentId: F:Menu.Remix.MixedUI.UIelement.tab
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: tab
  nameWithType: UIelement.tab
  fullName: Menu.Remix.MixedUI.UIelement.tab
- uid: Menu.Remix.MixedUI.UIelement.myContainer
  commentId: F:Menu.Remix.MixedUI.UIelement.myContainer
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: myContainer
  nameWithType: UIelement.myContainer
  fullName: Menu.Remix.MixedUI.UIelement.myContainer
- uid: Menu.Remix.MixedUI.UIelement.<scrollBox>k__BackingField
  commentId: F:Menu.Remix.MixedUI.UIelement.<scrollBox>k__BackingField
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: <scrollBox>k__BackingField
  nameWithType: UIelement.<scrollBox>k__BackingField
  fullName: Menu.Remix.MixedUI.UIelement.<scrollBox>k__BackingField
- uid: Menu.Remix.MixedUI.UIelement.<InScrollBox>k__BackingField
  commentId: F:Menu.Remix.MixedUI.UIelement.<InScrollBox>k__BackingField
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: <InScrollBox>k__BackingField
  nameWithType: UIelement.<InScrollBox>k__BackingField
  fullName: Menu.Remix.MixedUI.UIelement.<InScrollBox>k__BackingField
- uid: Menu.Remix.MixedUI.UIelement.lastScreenPos
  commentId: F:Menu.Remix.MixedUI.UIelement.lastScreenPos
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: lastScreenPos
  nameWithType: UIelement.lastScreenPos
  fullName: Menu.Remix.MixedUI.UIelement.lastScreenPos
- uid: Menu.Remix.MixedUI.UIelement.wrapper
  commentId: F:Menu.Remix.MixedUI.UIelement.wrapper
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: wrapper
  nameWithType: UIelement.wrapper
  fullName: Menu.Remix.MixedUI.UIelement.wrapper
- uid: Menu.Remix.MixedUI.UIelement.Reset
  commentId: M:Menu.Remix.MixedUI.UIelement.Reset
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: Reset()
  nameWithType: UIelement.Reset()
  fullName: Menu.Remix.MixedUI.UIelement.Reset()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.Hide
  commentId: M:Menu.Remix.MixedUI.UIelement.Hide
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: Hide()
  nameWithType: UIelement.Hide()
  fullName: Menu.Remix.MixedUI.UIelement.Hide()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.Hide
    name: Hide
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.Hide
    name: Hide
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.Show
  commentId: M:Menu.Remix.MixedUI.UIelement.Show
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: Show()
  nameWithType: UIelement.Show()
  fullName: Menu.Remix.MixedUI.UIelement.Show()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.Show
    name: Show
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.Show
    name: Show
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.GetPos
  commentId: M:Menu.Remix.MixedUI.UIelement.GetPos
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: GetPos()
  nameWithType: UIelement.GetPos()
  fullName: Menu.Remix.MixedUI.UIelement.GetPos()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.GetPos
    name: GetPos
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.GetPos
    name: GetPos
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)
  commentId: M:Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: SetPos(Vector2)
  nameWithType: UIelement.SetPos(Vector2)
  fullName: Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)
    name: SetPos
    isExternal: true
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)
    name: SetPos
    isExternal: true
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.MoveToBack
  commentId: M:Menu.Remix.MixedUI.UIelement.MoveToBack
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: MoveToBack()
  nameWithType: UIelement.MoveToBack()
  fullName: Menu.Remix.MixedUI.UIelement.MoveToBack()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.MoveToBack
    name: MoveToBack
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.MoveToBack
    name: MoveToBack
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.MoveToFront
  commentId: M:Menu.Remix.MixedUI.UIelement.MoveToFront
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: MoveToFront()
  nameWithType: UIelement.MoveToFront()
  fullName: Menu.Remix.MixedUI.UIelement.MoveToFront()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.MoveToFront
    name: MoveToFront
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.MoveToFront
    name: MoveToFront
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)
  commentId: M:Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: MoveInFrontOfElement(UIelement)
  nameWithType: UIelement.MoveInFrontOfElement(UIelement)
  fullName: Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)
    name: MoveInFrontOfElement
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)
    name: MoveInFrontOfElement
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)
  commentId: M:Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: MoveBehindElement(UIelement)
  nameWithType: UIelement.MoveBehindElement(UIelement)
  fullName: Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)
    name: MoveBehindElement
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)
    name: MoveBehindElement
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)
  commentId: M:Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: PlaySound(SoundID)
  nameWithType: UIelement.PlaySound(SoundID)
  fullName: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)
    name: PlaySound
    isExternal: true
  - name: (
  - uid: SoundID
    name: SoundID
    isExternal: true
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)
    name: PlaySound
    isExternal: true
  - name: (
  - uid: SoundID
    name: SoundID
    isExternal: true
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)
  commentId: M:Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: PlaySound(SoundID, float, float, float)
  nameWithType: UIelement.PlaySound(SoundID, float, float, float)
  fullName: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID, float, float, float)
  nameWithType.vb: UIelement.PlaySound(SoundID, Single, Single, Single)
  fullName.vb: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID, Single, Single, Single)
  name.vb: PlaySound(SoundID, Single, Single, Single)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)
    name: PlaySound
    isExternal: true
  - name: (
  - uid: SoundID
    name: SoundID
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)
    name: PlaySound
    isExternal: true
  - name: (
  - uid: SoundID
    name: SoundID
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.Unload
  commentId: M:Menu.Remix.MixedUI.UIelement.Unload
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: Unload()
  nameWithType: UIelement.Unload()
  fullName: Menu.Remix.MixedUI.UIelement.Unload()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.Unload
    name: Unload
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.Unload
    name: Unload
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.FrameMultiply(System.Int32)
  commentId: M:Menu.Remix.MixedUI.UIelement.FrameMultiply(System.Int32)
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: FrameMultiply(int)
  nameWithType: UIelement.FrameMultiply(int)
  fullName: Menu.Remix.MixedUI.UIelement.FrameMultiply(int)
  nameWithType.vb: UIelement.FrameMultiply(Integer)
  fullName.vb: Menu.Remix.MixedUI.UIelement.FrameMultiply(Integer)
  name.vb: FrameMultiply(Integer)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.FrameMultiply(System.Int32)
    name: FrameMultiply
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.FrameMultiply(System.Int32)
    name: FrameMultiply
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)
  commentId: M:Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FLabelCreate(string, bool)
  nameWithType: UIelement.FLabelCreate(string, bool)
  fullName: Menu.Remix.MixedUI.UIelement.FLabelCreate(string, bool)
  nameWithType.vb: UIelement.FLabelCreate(String, Boolean)
  fullName.vb: Menu.Remix.MixedUI.UIelement.FLabelCreate(String, Boolean)
  name.vb: FLabelCreate(String, Boolean)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)
    name: FLabelCreate
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)
    name: FLabelCreate
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: FLabelPlaceAtCenter(FLabel, Vector2, Vector2)
  nameWithType: UIelement.FLabelPlaceAtCenter(FLabel, Vector2, Vector2)
  fullName: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel, UnityEngine.Vector2, UnityEngine.Vector2)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)
    name: FLabelPlaceAtCenter
    isExternal: true
  - name: (
  - uid: FLabel
    name: FLabel
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)
    name: FLabelPlaceAtCenter
    isExternal: true
  - name: (
  - uid: FLabel
    name: FLabel
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: FLabelPlaceAtCenter(FLabel, float, float, float, float)
  nameWithType: UIelement.FLabelPlaceAtCenter(FLabel, float, float, float, float)
  fullName: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel, float, float, float, float)
  nameWithType.vb: UIelement.FLabelPlaceAtCenter(FLabel, Single, Single, Single, Single)
  fullName.vb: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel, Single, Single, Single, Single)
  name.vb: FLabelPlaceAtCenter(FLabel, Single, Single, Single, Single)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)
    name: FLabelPlaceAtCenter
    isExternal: true
  - name: (
  - uid: FLabel
    name: FLabel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)
    name: FLabelPlaceAtCenter
    isExternal: true
  - name: (
  - uid: FLabel
    name: FLabel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(System.Nullable{System.Boolean})
  commentId: M:Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(System.Nullable{System.Boolean})
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: ForceMenuMouseMode(bool?)
  nameWithType: UIelement.ForceMenuMouseMode(bool?)
  fullName: Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(bool?)
  nameWithType.vb: UIelement.ForceMenuMouseMode(Boolean?)
  fullName.vb: Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(Boolean?)
  name.vb: ForceMenuMouseMode(Boolean?)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(System.Nullable{System.Boolean})
    name: ForceMenuMouseMode
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(System.Nullable{System.Boolean})
    name: ForceMenuMouseMode
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.Reactivate
  commentId: M:Menu.Remix.MixedUI.UIelement.Reactivate
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: Reactivate()
  nameWithType: UIelement.Reactivate()
  fullName: Menu.Remix.MixedUI.UIelement.Reactivate()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement.Reactivate
    name: Reactivate
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement.Reactivate
    name: Reactivate
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIelement._AddToScrollBox(Menu.Remix.MixedUI.OpScrollBox)
  commentId: M:Menu.Remix.MixedUI.UIelement._AddToScrollBox(Menu.Remix.MixedUI.OpScrollBox)
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: _AddToScrollBox(OpScrollBox)
  nameWithType: UIelement._AddToScrollBox(OpScrollBox)
  fullName: Menu.Remix.MixedUI.UIelement._AddToScrollBox(Menu.Remix.MixedUI.OpScrollBox)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement._AddToScrollBox(Menu.Remix.MixedUI.OpScrollBox)
    name: _AddToScrollBox
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.OpScrollBox
    name: OpScrollBox
    isExternal: true
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement._AddToScrollBox(Menu.Remix.MixedUI.OpScrollBox)
    name: _AddToScrollBox
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.OpScrollBox
    name: OpScrollBox
    isExternal: true
  - name: )
- uid: Menu.Remix.MixedUI.UIelement._RemoveFromScrollBox
  commentId: M:Menu.Remix.MixedUI.UIelement._RemoveFromScrollBox
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: _RemoveFromScrollBox()
  nameWithType: UIelement._RemoveFromScrollBox()
  fullName: Menu.Remix.MixedUI.UIelement._RemoveFromScrollBox()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement._RemoveFromScrollBox
    name: _RemoveFromScrollBox
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement._RemoveFromScrollBox
    name: _RemoveFromScrollBox
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIelement._SetTab(Menu.Remix.MixedUI.OpTab)
  commentId: M:Menu.Remix.MixedUI.UIelement._SetTab(Menu.Remix.MixedUI.OpTab)
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: _SetTab(OpTab)
  nameWithType: UIelement._SetTab(OpTab)
  fullName: Menu.Remix.MixedUI.UIelement._SetTab(Menu.Remix.MixedUI.OpTab)
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement._SetTab(Menu.Remix.MixedUI.OpTab)
    name: _SetTab
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.OpTab
    name: OpTab
    isExternal: true
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement._SetTab(Menu.Remix.MixedUI.OpTab)
    name: _SetTab
    isExternal: true
  - name: (
  - uid: Menu.Remix.MixedUI.OpTab
    name: OpTab
    isExternal: true
  - name: )
- uid: Menu.Remix.MixedUI.UIelement._CenterPos
  commentId: M:Menu.Remix.MixedUI.UIelement._CenterPos
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: _CenterPos()
  nameWithType: UIelement._CenterPos()
  fullName: Menu.Remix.MixedUI.UIelement._CenterPos()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement._CenterPos
    name: _CenterPos
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement._CenterPos
    name: _CenterPos
    isExternal: true
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.UIelement.PosX
  commentId: P:Menu.Remix.MixedUI.UIelement.PosX
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: PosX
  nameWithType: UIelement.PosX
  fullName: Menu.Remix.MixedUI.UIelement.PosX
- uid: Menu.Remix.MixedUI.UIelement.PosY
  commentId: P:Menu.Remix.MixedUI.UIelement.PosY
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: PosY
  nameWithType: UIelement.PosY
  fullName: Menu.Remix.MixedUI.UIelement.PosY
- uid: Menu.Remix.MixedUI.UIelement.size
  commentId: P:Menu.Remix.MixedUI.UIelement.size
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: size
  nameWithType: UIelement.size
  fullName: Menu.Remix.MixedUI.UIelement.size
- uid: Menu.Remix.MixedUI.UIelement.rad
  commentId: P:Menu.Remix.MixedUI.UIelement.rad
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: rad
  nameWithType: UIelement.rad
  fullName: Menu.Remix.MixedUI.UIelement.rad
- uid: Menu.Remix.MixedUI.UIelement.Hidden
  commentId: P:Menu.Remix.MixedUI.UIelement.Hidden
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: Hidden
  nameWithType: UIelement.Hidden
  fullName: Menu.Remix.MixedUI.UIelement.Hidden
- uid: Menu.Remix.MixedUI.UIelement.IsInactive
  commentId: P:Menu.Remix.MixedUI.UIelement.IsInactive
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: IsInactive
  nameWithType: UIelement.IsInactive
  fullName: Menu.Remix.MixedUI.UIelement.IsInactive
- uid: Menu.Remix.MixedUI.UIelement.pos
  commentId: P:Menu.Remix.MixedUI.UIelement.pos
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: pos
  nameWithType: UIelement.pos
  fullName: Menu.Remix.MixedUI.UIelement.pos
- uid: Menu.Remix.MixedUI.UIelement.Menu
  commentId: P:Menu.Remix.MixedUI.UIelement.Menu
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: Menu
  nameWithType: UIelement.Menu
  fullName: Menu.Remix.MixedUI.UIelement.Menu
- uid: Menu.Remix.MixedUI.UIelement.Owner
  commentId: P:Menu.Remix.MixedUI.UIelement.Owner
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: Owner
  nameWithType: UIelement.Owner
  fullName: Menu.Remix.MixedUI.UIelement.Owner
- uid: Menu.Remix.MixedUI.UIelement.MouseOver
  commentId: P:Menu.Remix.MixedUI.UIelement.MouseOver
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: MouseOver
  nameWithType: UIelement.MouseOver
  fullName: Menu.Remix.MixedUI.UIelement.MouseOver
- uid: Menu.Remix.MixedUI.UIelement.MousePos
  commentId: P:Menu.Remix.MixedUI.UIelement.MousePos
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: MousePos
  nameWithType: UIelement.MousePos
  fullName: Menu.Remix.MixedUI.UIelement.MousePos
- uid: Menu.Remix.MixedUI.UIelement.scrollBox
  commentId: P:Menu.Remix.MixedUI.UIelement.scrollBox
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: scrollBox
  nameWithType: UIelement.scrollBox
  fullName: Menu.Remix.MixedUI.UIelement.scrollBox
- uid: Menu.Remix.MixedUI.UIelement.InScrollBox
  commentId: P:Menu.Remix.MixedUI.UIelement.InScrollBox
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: InScrollBox
  nameWithType: UIelement.InScrollBox
  fullName: Menu.Remix.MixedUI.UIelement.InScrollBox
- uid: Menu.Remix.MixedUI.UIelement.ScreenPos
  commentId: P:Menu.Remix.MixedUI.UIelement.ScreenPos
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: ScreenPos
  nameWithType: UIelement.ScreenPos
  fullName: Menu.Remix.MixedUI.UIelement.ScreenPos
- uid: Menu.Remix.MixedUI.UIelement.frameMulti
  commentId: P:Menu.Remix.MixedUI.UIelement.frameMulti
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: frameMulti
  nameWithType: UIelement.frameMulti
  fullName: Menu.Remix.MixedUI.UIelement.frameMulti
- uid: Menu.Remix.MixedUI.UIelement.MenuMouseMode
  commentId: P:Menu.Remix.MixedUI.UIelement.MenuMouseMode
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: MenuMouseMode
  nameWithType: UIelement.MenuMouseMode
  fullName: Menu.Remix.MixedUI.UIelement.MenuMouseMode
- uid: Menu.Remix.MixedUI.UIelement.CtlrInput
  commentId: P:Menu.Remix.MixedUI.UIelement.CtlrInput
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: CtlrInput
  nameWithType: UIelement.CtlrInput
  fullName: Menu.Remix.MixedUI.UIelement.CtlrInput
- uid: Menu.Remix.MixedUI.UIelement.LastCtlrInput
  commentId: P:Menu.Remix.MixedUI.UIelement.LastCtlrInput
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: LastCtlrInput
  nameWithType: UIelement.LastCtlrInput
  fullName: Menu.Remix.MixedUI.UIelement.LastCtlrInput
- uid: Menu.Remix.MixedUI.UIelement.ContextWrapped
  commentId: P:Menu.Remix.MixedUI.UIelement.ContextWrapped
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: ContextWrapped
  nameWithType: UIelement.ContextWrapped
  fullName: Menu.Remix.MixedUI.UIelement.ContextWrapped
- uid: Menu.Remix.MixedUI.UIelement.OnChange
  commentId: E:Menu.Remix.MixedUI.UIelement.OnChange
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: OnChange
  nameWithType: UIelement.OnChange
  fullName: Menu.Remix.MixedUI.UIelement.OnChange
- uid: Menu.Remix.MixedUI.UIelement.OnUpdate
  commentId: E:Menu.Remix.MixedUI.UIelement.OnUpdate
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: OnUpdate
  nameWithType: UIelement.OnUpdate
  fullName: Menu.Remix.MixedUI.UIelement.OnUpdate
- uid: Menu.Remix.MixedUI.UIelement.OnGrafUpdate
  commentId: E:Menu.Remix.MixedUI.UIelement.OnGrafUpdate
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: OnGrafUpdate
  nameWithType: UIelement.OnGrafUpdate
  fullName: Menu.Remix.MixedUI.UIelement.OnGrafUpdate
- uid: Menu.Remix.MixedUI.UIelement.OnReset
  commentId: E:Menu.Remix.MixedUI.UIelement.OnReset
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: OnReset
  nameWithType: UIelement.OnReset
  fullName: Menu.Remix.MixedUI.UIelement.OnReset
- uid: Menu.Remix.MixedUI.UIelement.OnDeactivate
  commentId: E:Menu.Remix.MixedUI.UIelement.OnDeactivate
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: OnDeactivate
  nameWithType: UIelement.OnDeactivate
  fullName: Menu.Remix.MixedUI.UIelement.OnDeactivate
- uid: Menu.Remix.MixedUI.UIelement.OnReactivate
  commentId: E:Menu.Remix.MixedUI.UIelement.OnReactivate
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: OnReactivate
  nameWithType: UIelement.OnReactivate
  fullName: Menu.Remix.MixedUI.UIelement.OnReactivate
- uid: Menu.Remix.MixedUI.UIelement.OnUnload
  commentId: E:Menu.Remix.MixedUI.UIelement.OnUnload
  parent: Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: OnUnload
  nameWithType: UIelement.OnUnload
  fullName: Menu.Remix.MixedUI.UIelement.OnUnload
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Menu.Remix.MixedUI
  commentId: N:Menu.Remix.MixedUI
  isExternal: true
  name: Menu.Remix.MixedUI
  nameWithType: Menu.Remix.MixedUI
  fullName: Menu.Remix.MixedUI
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RWAchievements.AchievementOPSimpleButton.#ctor*
  commentId: Overload:RWAchievements.AchievementOPSimpleButton.#ctor
  href: RWAchievements.AchievementOPSimpleButton.html#RWAchievements_AchievementOPSimpleButton__ctor_UnityEngine_Vector2_UnityEngine_Vector2_System_String_System_String_
  name: AchievementOPSimpleButton
  nameWithType: AchievementOPSimpleButton.AchievementOPSimpleButton
  fullName: RWAchievements.AchievementOPSimpleButton.AchievementOPSimpleButton
  nameWithType.vb: AchievementOPSimpleButton.New
  fullName.vb: RWAchievements.AchievementOPSimpleButton.New
  name.vb: New
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
